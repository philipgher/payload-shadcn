/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    pages: Page;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    settings: Setting;
    mainNav: MainNav;
    footerNav: FooterNav;
  };
  globalsSelect: {
    settings: SettingsSelect<false> | SettingsSelect<true>;
    mainNav: MainNavSelect<false> | MainNavSelect<true>;
    footerNav: FooterNavSelect<false> | FooterNavSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  role: 'admin' | 'editor' | 'author' | 'viewer';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  /**
   * Mark this page as the homepage. Only one page can be homepage.
   */
  isHome?: boolean | null;
  slug?: string | null;
  /**
   * Select a parent page to nest this page under. This will affect the page's URL. E.g., selecting 'About' as the parent and setting the slug to 'team' will result in the URL '/about/team'. SEO benefits include better site structure and keyword relevance.
   */
  parent?: (string | null) | Page;
  fullPath?: string | null;
  layout: (
    | {
        heading: string;
        subheading?: string | null;
        image?: (string | null) | Media;
        ctaLabel?: string | null;
        ctaHref?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'hero';
      }
    | {
        cards?:
          | {
              title: string;
              description?: string | null;
              icon?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cardGrid';
      }
    | {
        quote: string;
        author: string;
        role?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'testimonial';
      }
    | {
        body?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'content';
      }
    | {
        message: string;
        variant?: ('default' | 'destructive') | null;
        ctaLabel?: string | null;
        ctaHref?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'callout';
      }
    | {
        media: string | Media;
        caption?: string | null;
        align?: ('left' | 'right' | 'center') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaBlock';
      }
    | {
        items?:
          | {
              question: string;
              answer: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'faq';
      }
  )[];
  meta: {
    /**
     * Appears in search engines and browser tabs (recommended under 60 chars).
     */
    title: string;
    /**
     * Summary shown in search results (recommended under 160 chars).
     */
    description: string;
    /**
     * Image used in link previews (Facebook, Twitter, etc).
     */
    image?: (string | null) | Media;
    /**
     * If left blank, defaults to this page’s URL.
     */
    canonicalUrl?: string | null;
    social?: {
      /**
       * Overrides Meta Title for social sharing.
       */
      ogTitle?: string | null;
      /**
       * Overrides Meta Description for social sharing.
       */
      ogDescription?: string | null;
      twitterCard?: ('summary' | 'summary_large_image') | null;
    };
    indexing?: {
      noIndex?: boolean | null;
      noFollow?: boolean | null;
      hideInSitemap?: boolean | null;
    };
    sitemap?: {
      priority?: ('0.0' | '0.3' | '0.5' | '0.7' | '1.0') | null;
      changefreq?: ('always' | 'hourly' | 'daily' | 'weekly' | 'monthly' | 'yearly' | 'never') | null;
    };
  };
  author: string | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  isHome?: T;
  slug?: T;
  parent?: T;
  fullPath?: T;
  layout?:
    | T
    | {
        hero?:
          | T
          | {
              heading?: T;
              subheading?: T;
              image?: T;
              ctaLabel?: T;
              ctaHref?: T;
              id?: T;
              blockName?: T;
            };
        cardGrid?:
          | T
          | {
              cards?:
                | T
                | {
                    title?: T;
                    description?: T;
                    icon?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        testimonial?:
          | T
          | {
              quote?: T;
              author?: T;
              role?: T;
              id?: T;
              blockName?: T;
            };
        content?:
          | T
          | {
              body?: T;
              id?: T;
              blockName?: T;
            };
        callout?:
          | T
          | {
              message?: T;
              variant?: T;
              ctaLabel?: T;
              ctaHref?: T;
              id?: T;
              blockName?: T;
            };
        mediaBlock?:
          | T
          | {
              media?: T;
              caption?: T;
              align?: T;
              id?: T;
              blockName?: T;
            };
        faq?:
          | T
          | {
              items?:
                | T
                | {
                    question?: T;
                    answer?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        canonicalUrl?: T;
        social?:
          | T
          | {
              ogTitle?: T;
              ogDescription?: T;
              twitterCard?: T;
            };
        indexing?:
          | T
          | {
              noIndex?: T;
              noFollow?: T;
              hideInSitemap?: T;
            };
        sitemap?:
          | T
          | {
              priority?: T;
              changefreq?: T;
            };
      };
  author?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: string;
  siteName: string;
  /**
   * Appended to all page titles (e.g. “| My Company”)
   */
  titleSuffix?: string | null;
  /**
   * Used for canonical URLs and SEO (e.g. https://example.com)
   */
  domain: string;
  /**
   * Shown in browser tabs and search results
   */
  favicon?: (string | null) | Media;
  /**
   * Used when a page doesn’t set its own SEO image
   */
  defaultOGImage?: (string | null) | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mainNav".
 */
export interface MainNav {
  id: string;
  items?:
    | {
        label: string;
        linkType?: ('page' | 'custom') | null;
        page?: (string | null) | Page;
        url?: string | null;
        children?:
          | {
              label: string;
              linkType?: ('page' | 'custom') | null;
              page?: (string | null) | Page;
              url?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footerNav".
 */
export interface FooterNav {
  id: string;
  items?:
    | {
        label: string;
        linkType?: ('page' | 'custom') | null;
        page?: (string | null) | Page;
        url?: string | null;
        children?:
          | {
              label: string;
              linkType?: ('page' | 'custom') | null;
              page?: (string | null) | Page;
              url?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  siteName?: T;
  titleSuffix?: T;
  domain?: T;
  favicon?: T;
  defaultOGImage?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mainNav_select".
 */
export interface MainNavSelect<T extends boolean = true> {
  items?:
    | T
    | {
        label?: T;
        linkType?: T;
        page?: T;
        url?: T;
        children?:
          | T
          | {
              label?: T;
              linkType?: T;
              page?: T;
              url?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footerNav_select".
 */
export interface FooterNavSelect<T extends boolean = true> {
  items?:
    | T
    | {
        label?: T;
        linkType?: T;
        page?: T;
        url?: T;
        children?:
          | T
          | {
              label?: T;
              linkType?: T;
              page?: T;
              url?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}